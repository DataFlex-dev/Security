///*
// * THREAD SAFETY: crypto_box_keypair() is thread-safe,
// * provided that sodium_init() was called before.
// *
// * Other functions are always thread-safe.
// */

// Version

#IF (!@ >= 200)
  Use sodiumDF20\crypto_box_curve25519xsalsa20poly1305.h.pkg
#ELSE
  Use sodium\crypto_box_curve25519xsalsa20poly1305.h.pkg
#ENDIF

Define crypto_box_SEEDBYTES for crypto_box_curve25519xsalsa20poly1305_SEEDBYTES

#IFNDEF sLibsodiumDllName
#IFDEF IS$WIN64
  Define sLibsodiumDllName for libsodium64.dll
#ELSE
  Define sLibsodiumDllName for libsodium.dll
#ENDIF 
#ENDIF

{ Visibility=Private }
External_Function libsodium_crypto_box_seedbytes "crypto_box_seedbytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_box_PUBLICKEYBYTES for crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES

{ Visibility=Private }
External_Function libsodium_crypto_box_publickeybytes "crypto_box_publickeybytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_box_SECRETKEYBYTES for crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES

{ Visibility=Private }
External_Function libsodium_crypto_box_secretkeybytes "crypto_box_secretkeybytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_box_NONCEBYTES for crypto_box_curve25519xsalsa20poly1305_NONCEBYTES

{ Visibility=Private }
External_Function libsodium_crypto_box_noncebytes "crypto_box_noncebytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_box_MACBYTES for crypto_box_curve25519xsalsa20poly1305_MACBYTES

{ Visibility=Private }
External_Function libsodium_crypto_box_macbytes "crypto_box_macbytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_box_PRIMITIVE for "curve25519xsalsa20poly1305"

{ Visibility=Private }
External_Function libsodium_crypto_box_primitive "crypto_box_primitive" sLibsodiumDllName ;
    Returns String

{ Visibility=Private }
External_Function libsodium_crypto_box_seed_keypair "crypto_box_seed_keypair" sLibsodiumDllName ;
    Pointer pk ;
    Pointer sk ;
    Pointer seed ;
    Returns Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_keypair "crypto_box_keypair" sLibsodiumDllName ;
    Pointer pk ;
    Pointer sk ;
    Returns Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_easy "crypto_box_easy" sLibsodiumDllName ;
    Pointer  c ;
    Pointer  m ;
    BigInt   mlen ;
    Pointer  n ;
    Pointer  pk ;
    Pointer  sk ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_open_easy "crypto_box_open_easy" sLibsodiumDllName ;
    Pointer  m ;
    Pointer  c ;
    BigInt   clen ;
    Pointer  n ;
    Pointer  pk ;
    Pointer  sk ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_detached "crypto_box_detached" sLibsodiumDllName ;
    Pointer c ;
    Pointer mac ;
    Pointer m ;
    BigInt   mlen ;
    Pointer  n ;
    Pointer  pk ;
    Pointer  sk ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_open_detached "crypto_box_open_detached" sLibsodiumDllName ;
    Pointer m ;
    Pointer c ;
    Pointer mac ;
    BigInt   clen ;
    Pointer  n ;
    Pointer  pk ;
    Pointer  sk ;
    Returns  Integer

//* -- Precomputation interface -- */

Define crypto_box_BEFORENMBYTES for crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES

{ Visibility=Private }
External_Function libsodium_crypto_box_beforenmbytes "crypto_box_beforenmbytes" sLibsodiumDllName ;
    Returns UInteger

{ Visibility=Private }
External_Function libsodium_crypto_box_beforenm "crypto_box_beforenm" sLibsodiumDllName ;
    Pointer k ;
    Pointer pk ;
    Pointer sk ;
    Returns Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_easy_afternm "crypto_box_easy_afternm" sLibsodiumDllName ;
    Pointer  c ;
    Pointer  m ;
    BigInt   mlen ;
    Pointer  n ;
    Pointer  k ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_open_easy_afternm "crypto_box_open_easy_afternm" sLibsodiumDllName ;
    Pointer  m ;
    Pointer  c ;
    BigInt   clen ;
    Pointer  n ;
    Pointer  k ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_detached_afternm "crypto_box_detached_afternm" sLibsodiumDllName ;
    Pointer  c ;
    Pointer  mac ;
    Pointer  m ;
    BigInt   mlen ;
    Pointer  n ;
    Pointer  k ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_open_detached_afternm "crypto_box_open_detached_afternm" sLibsodiumDllName ;
    Pointer  m ;
    Pointer  c ;
    Pointer  mac ;
    BigInt   clen ;
    Pointer  n ;
    Pointer  k ;
    Returns  Integer

//* -- Ephemeral SK interface -- */

Define crypto_box_SEALBYTES for (crypto_box_PUBLICKEYBYTES + crypto_box_MACBYTES)

{ Visibility=Private }
External_Function libsodium_crypto_box_sealbytes "crypto_box_sealbytes" sLibsodiumDllName ;
    Returns UInteger

{ Visibility=Private }
External_Function libsodium_crypto_box_seal "crypto_box_seal" sLibsodiumDllName ;
    Pointer  c ;
    Pointer  m ;
    BigInt   mlen ;
    Pointer  pk ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_box_seal_open "crypto_box_seal_open" sLibsodiumDllName ;
    Pointer  m ;
    Pointer  c ;
    BigInt   clen ;
    Pointer  pk ;
    Pointer  sk ;
    Returns  Integer

//* -- NaCl compatibility interface ; Requires padding -- */
//
//#define crypto_box_ZEROBYTES crypto_box_curve25519xsalsa20poly1305_ZEROBYTES
//SODIUM_EXPORT
//size_t  crypto_box_zerobytes(void) ;
//
//#define crypto_box_BOXZEROBYTES crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES
//SODIUM_EXPORT
//size_t  crypto_box_boxzerobytes(void) ;
//
//SODIUM_EXPORT
//int crypto_box(unsigned Char *c, const unsigned Char *m,
//               unsigned long long mlen, const unsigned char *n,
//               const unsigned Char *pk, const unsigned Char *sk)
//            __attribute__ ((warn_unused_result)) ;
//
//SODIUM_EXPORT
//int crypto_box_open(unsigned Char *m, const unsigned Char *c,
//                    unsigned long long clen, const unsigned char *n,
//                    const unsigned Char *pk, const unsigned Char *sk)
//            __attribute__ ((warn_unused_result)) ;
//
//SODIUM_EXPORT
//int crypto_box_afternm(unsigned Char *c, const unsigned Char *m,
//                       unsigned long long mlen, const unsigned char *n,
//                       const unsigned Char *k) ;
//
//SODIUM_EXPORT
//int crypto_box_open_afternm(unsigned Char *m, const unsigned Char *c,
//                            unsigned long long clen, const unsigned char *n,
//                            const unsigned Char *k)
//            __attribute__ ((warn_unused_result)) ;
//

