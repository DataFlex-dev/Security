//#include "crypto_secretbox_xsalsa20poly1305.h"

Define crypto_secretbox_KEYBYTES for crypto_secretbox_xsalsa20poly1305_KEYBYTES

#IFDEF IS$WIN64
  Define sLibsodiumDllName for libsodium64.dll
#ELSE
  Define sLibsodiumDllName for libsodium.dll
#ENDIF

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_keybytes "crypto_secretbox_keybytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_secretbox_NONCEBYTES for crypto_secretbox_xsalsa20poly1305_NONCEBYTES

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_noncebytes "crypto_secretbox_noncebytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_secretbox_MACBYTES for crypto_secretbox_xsalsa20poly1305_MACBYTES

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_macbytes "crypto_secretbox_macbytes" sLibsodiumDllName ;
    Returns UInteger

Define crypto_secretbox_PRIMITIVE for "xsalsa20poly1305"

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_primitive "crypto_secretbox_primitive" sLibsodiumDllName ;
    Returns String

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_easy "crypto_secretbox_easy" sLibsodiumDllName ;
    Pointer  c ;
    Pointer  m ;
    BigInt   mlen ;
    Pointer  n ;
    Pointer  k ;
    Returns  Integer

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_open_easy "crypto_secretbox_open_easy" sLibsodiumDllName ;
    Pointer  m ;
    Pointer  c ;
    BigInt   clen ;
    Pointer  n ;
    Pointer  k ;
    Returns Integer

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_detached "crypto_secretbox_detached" sLibsodiumDllName ;
    Pointer  c ;
    Pointer  mac ;
    Pointer  m ;
    BigInt   mlen ;
    Pointer  n ;
    Pointer  k ;
    Returns Integer

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_open_detached "crypto_secretbox_open_detached" sLibsodiumDllName ;
    Pointer  m ;
    Pointer  c ;
    Pointer  mac ;
    BigInt   clen ;
    Pointer  n ;
    Pointer  k ;
    Returns Integer

{ Visibility=Private }
External_Function libsodium_crypto_secretbox_keygen "crypto_secretbox_keygen" sLibsodiumDllName ;
    Pointer k;      // length: crypto_secretbox_KEYBYTES
    Returns Void_Type

//* -- NaCl compatibility interface ; Requires padding -- */
//
//#define crypto_secretbox_ZEROBYTES crypto_secretbox_xsalsa20poly1305_ZEROBYTES
//SODIUM_EXPORT
//size_t  crypto_secretbox_zerobytes(void) ;
//
//#define crypto_secretbox_BOXZEROBYTES crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES
//SODIUM_EXPORT
//size_t  crypto_secretbox_boxzerobytes(void) ;
//
//SODIUM_EXPORT
//int crypto_secretbox(unsigned char *c, const unsigned char *m,
//                     unsigned long long mlen, const unsigned char *n,
//                     const unsigned char *k) ;
//
//SODIUM_EXPORT
//int crypto_secretbox_open(unsigned char *m, const unsigned char *c,
//                          unsigned long long clen, const unsigned char *n,
//                          const unsigned char *k)
//            __attribute__ ((warn_unused_result)) ;

